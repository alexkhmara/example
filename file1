Another change done in feature-branch

There we have some text

So, what is Git in a nutshell? This is an important section to absorb, because if you understand what Git is and the fundamentals of how it works, 
then using Git effectively will probably be much easier for you. As you learn Git, try to clear your mind of the things you may know about other VCSs, 
such as Subversion and Perforce; doing so will help you avoid subtle confusion when using the tool. 

Git stores and thinks about information much differently than these other systems, even though the user interface is fairly similar; 
understanding those differences will help prevent you from becoming confused while using it.

Git doesn’t think of or store its data this way. Instead, Git thinks of its data more like a set of snapshots of a mini filesystem. 
Every time you commit, or save the state of your project in Git, it basically takes a picture of what all your files look like at that 
moment and stores a reference to that snapshot. To be efficient, if files have not changed, Git doesn’t store the file again—just a link 
to the previous identical file it has already stored